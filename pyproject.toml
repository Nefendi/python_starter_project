[tool.poetry]
name = "python_starter_project"
version = "0.1.0"
description = "A small template for starting bigger Python-based projects."
authors = ["Nefendi <nefendi.2snfj@slmail.me>"]
license = "The Unlicense"

[tool.poetry.dependencies]
python = "^3.12"
pydantic = "^2.8.2"
lagom = "^2.4.1"
attrs = "^23.1.0"
sqlalchemy = "^2.0.17"
alembic = "^1.11.1"
fastapi = "^0.112.0"
psycopg2-binary = "^2.9.6"
uvicorn = { extras = ["standard"], version = "^0.22.0" }
tenacity = "^8.2.2"
pendulum = "^3.0.0"
loguru = "^0.7.2"
pydantic-settings = "^2.4.0"

[tool.poetry.group.dev.dependencies]
mypy = "^1.0.1"
pytest = "^7.2.1"
pytest-cov = "^4.0.0"
pre-commit = "^3.1.0"
pytest-randomly = "^3.12.0"
assertpy = "^1.1"
pytest-sugar = "^0.9.7"
factory-boy = "^3.2.1"
coverage = { extras = ["toml"], version = "^7.2.7" }
hypothesis = "^6.80.0"
mutmut = "^2.4.3"
gitlint = "^0.19.1"
pytest-bdd = "^6.1.1"
import-linter = "^1.9.0"
pytest-asyncio = "^0.21.0"
tavern = "^2.2.0"
ruff = "^0.6.3"
snakeviz = "^2.2.0"
httpx = "^0.24.1"
freezegun = "^1.2.2"
pytest-mockito = "^0.0.4"
testcontainers = "^3.7.1"
pytest-xdist = "^3.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = ["C", "E", "F", "W", "B", "B9", "PT", "I", "UP", "PL"]
ignore = [
    # whitespace before ':', non-compliant with PEP8 and Black
    "E203",
    # line length, ignored because B950 from flake8-bugbear takes care of that
    "E501",
]

[tool.ruff.lint.pycodestyle]
max-line-length = 100

[tool.ruff.lint.mccabe]
max-complexity = 12

[tool.ruff.lint.per-file-ignores]
"*/alembic/env.py" = ["F401"]
"*/alembic/versions/*" = ["W291"]

[tool.mypy]
show_column_numbers = true
pretty = true
strict = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = ["assertpy.*", "factory.*", "testcontainers.*"]
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pytest.ini_options]
addopts = "-n auto"

[tool.coverage.report]
exclude_lines = ["@abstractmethod", "@abc.abstractmethod"]
show_missing = true

[tool.coverage.run]
branch = true
source = ["python_starter_project/"]
omit = ["*/database/*"]
